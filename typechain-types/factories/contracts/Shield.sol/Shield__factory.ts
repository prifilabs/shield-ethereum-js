/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Shield,
  ShieldInterface,
} from "../../../contracts/Shield.sol/Shield";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidCredentials",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "ShieldError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes8[]",
        name: "policy",
        type: "bytes8[]",
      },
    ],
    name: "PolicyAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "sig",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
    ],
    name: "PolicyAssigned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "roles",
        type: "bytes32[]",
      },
    ],
    name: "RolesAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes8",
            name: "roles",
            type: "bytes8",
          },
        ],
        indexed: false,
        internalType: "struct User[]",
        name: "users",
        type: "tuple[]",
      },
    ],
    name: "UsersSet",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "bytes8[]",
        name: "policy",
        type: "bytes8[]",
      },
    ],
    name: "addPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roles",
        type: "bytes32[]",
      },
    ],
    name: "addRoles",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "sig",
        type: "bytes4",
      },
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
    ],
    name: "assignPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
          {
            internalType: "bytes[]",
            name: "approvals",
            type: "bytes[]",
          },
        ],
        internalType: "struct Credentials",
        name: "credentials",
        type: "tuple",
      },
    ],
    name: "cancelCredentials",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "canceled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
          {
            internalType: "bytes[]",
            name: "approvals",
            type: "bytes[]",
          },
        ],
        internalType: "struct Credentials",
        name: "credentials",
        type: "tuple",
      },
    ],
    name: "executeCredentials",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "executed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "sig",
        type: "bytes4",
      },
    ],
    name: "getAssignedPolicy",
    outputs: [
      {
        internalType: "bytes8[]",
        name: "",
        type: "bytes8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
    ],
    name: "getPolicy",
    outputs: [
      {
        internalType: "bytes8[]",
        name: "",
        type: "bytes8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRoles",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUser",
    outputs: [
      {
        internalType: "bytes8",
        name: "",
        type: "bytes8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes8",
        name: "_roles",
        type: "bytes8",
      },
    ],
    name: "hasAnyRoles",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roles",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes8",
            name: "roles",
            type: "bytes8",
          },
        ],
        internalType: "struct User[]",
        name: "_users",
        type: "tuple[]",
      },
      {
        internalType: "bytes8[]",
        name: "policy",
        type: "bytes8[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes8",
            name: "roles",
            type: "bytes8",
          },
        ],
        internalType: "struct User[]",
        name: "_users",
        type: "tuple[]",
      },
    ],
    name: "setUsers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
          {
            internalType: "bytes[]",
            name: "approvals",
            type: "bytes[]",
          },
        ],
        internalType: "struct Credentials",
        name: "credentials",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "full",
        type: "bool",
      },
    ],
    name: "validateCredentials",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600180556200002062000026565b62000116565b600054610100900460ff16156200005a5760405162461bcd60e51b81526004016200005190620000b4565b60405180910390fd5b60005460ff9081161015620000b2576000805460ff191660ff9081179091556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249891620000a99162000106565b60405180910390a15b565b602080825281016200010081602781527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469602082015266616c697a696e6760c81b604082015260600190565b92915050565b60ff821681526020810162000100565b6128c180620001266000396000f3fe60806040526004361061010c5760003560e01c80636bc498711161009a578063a3f685f911610061578063a3f685f914610321578063a9059cbb14610341578063a9fcfb3314610354578063d6f5e21b14610384578063dd4f120e146103a457005b80636bc498711461024a5780636f77926b1461027757806371061398146102bd5780637434c105146102df5780638456cb591461030c57005b80633ff8ca59116100de5780633ff8ca59146101b05780635784091e146101d05780635c975abb146101f05780635e7c67db1461020a57806367eae18b1461022a57005b8063101970f7146101155780631c439266146101355780632cfcf2721461017b5780633f4ba83a1461019b57005b3661011357005b005b34801561012157600080fd5b5061011361013036600461181c565b6103c4565b34801561014157600080fd5b50610165610150366004611877565b60086020526000908152604090205460ff1681565b60405161017291906118aa565b60405180910390f35b34801561018757600080fd5b506101136101963660046118f8565b610412565b3480156101a757600080fd5b50610113610429565b3480156101bc57600080fd5b506101656101cb366004611963565b61046a565b3480156101dc57600080fd5b506101136101eb3660046119bb565b6104a7565b3480156101fc57600080fd5b506002546101659060ff1681565b34801561021657600080fd5b506101136102253660046119f5565b61057c565b34801561023657600080fd5b50610113610245366004611b88565b610652565b34801561025657600080fd5b5061026a610265366004611bc2565b61066a565b6040516101729190611c62565b34801561028357600080fd5b506102b0610292366004611c7a565b6001600160a01b031660009081526004602052604090205460c01b90565b6040516101729190611c9b565b3480156102c957600080fd5b506102d2610722565b6040516101729190611cf9565b3480156102eb57600080fd5b506102ff6102fa366004611d1d565b61077a565b6040516101729190611dbc565b34801561031857600080fd5b50610113610c4c565b34801561032d57600080fd5b5061026a61033c366004611877565b610c90565b61011361034f366004611dcd565b610d1f565b34801561036057600080fd5b5061016561036f366004611877565b60076020526000908152604090205460ff1681565b6103976103923660046119bb565b610d94565b6040516101729190611e58565b3480156103b057600080fd5b506101136103bf366004611eb3565b610f36565b3330146103d057600080fd5b61040d838383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506111f992505050565b505050565b33301461041e57600080fd5b61040d838383611335565b33301461043557600080fd5b6002805460ff191690556040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a1565b60008082610490856001600160a01b031660009081526004602052604090205460c01b90565b166001600160c01b03191615159150505b92915050565b60006104b482600061077a565b905060005b815181101561040d57336001600160a01b03168282815181106104de576104de611f5d565b60200260200101516001600160a01b03160361056a576001600860006105076080870187611f73565b600081811061051857610518611f5d565b905060200281019061052a9190611fcf565b604051610538929190612044565b6040518091039020815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b8061057481612067565b9150506104b9565b33301461058857600080fd5b600354604090610599908390612081565b11156105c1576040516330f4936760e21b81526004016105b8906120dd565b60405180910390fd5b60005b818110156106145760038383838181106105e0576105e0611f5d565b835460018101855560009485526020948590209190940292909201359190920155508061060c81612067565b9150506105c4565b507fdc3627b8a50594a2c055615b1dd1ef69f5dc80de35b405d1550f8bc7276e71ee8282604051610646929190612129565b60405180910390a15050565b33301461065e57600080fd5b610667816113a5565b50565b6001600160a01b03821660009081526006602090815260408083206001600160e01b031985168452825280832054808452600583529281902080548251818502810185019093528083526060949383018282801561071457602002820191906000526020600020906000905b82829054906101000a900460c01b6001600160c01b031916815260200190600801906020826007010492830192600103820291508084116106d65790505b505050505091505092915050565b6060600380548060200260200160405190810160405280929190818152602001828054801561077057602002820191906000526020600020905b81548152602001906001019080831161075c575b5050505050905090565b6060468360200135146107a057604051632022058360e01b81526004016105b890612166565b6107ad6080840184611f73565b90506000036107cf57604051632022058360e01b81526004016105b8906121aa565b60006108096107e46060860160408701611c7a565b6107f16060870187611fcf565b610800916004916000916121ba565b610265916121ea565b9050821561093f57600860006108226080870187611f73565b600081811061083357610833611f5d565b90506020028101906108459190611fcf565b604051610853929190612044565b604080519182900390912082526020820192909252016000205460ff161561088e57604051632022058360e01b81526004016105b890612259565b6007600061089f6080870187611f73565b60008181106108b0576108b0611f5d565b90506020028101906108c29190611fcf565b6040516108d0929190612044565b604080519182900390912082526020820192909252016000205460ff161561090b57604051632022058360e01b81526004016105b8906122ac565b805161091a6080860186611f73565b90501461093a57604051632022058360e01b81526004016105b8906122f0565b61096f565b805161094e6080860186611f73565b9050111561096f57604051632022058360e01b81526004016105b8906122f0565b600061097e6080860186611f73565b90506001600160401b0381111561099757610997611a3c565b6040519080825280602002602001820160405280156109c0578160200160208202803683370190505b50905060005b6109d36080870187611f73565b9050811015610c435760006109eb6080880188611f73565b838181106109fb576109fb611f5d565b9050602002810190610a0d9190611fcf565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093945050508382039050610aa05787356020890135610a6260608b0160408c01611c7a565b610a6f60608c018c611fcf565b604051602001610a83959493929190612323565b604051602081830303815290604052805190602001209050610b03565b610aad6080890189611f73565b610ab8600186612369565b818110610ac757610ac7611f5d565b9050602002810190610ad99190611fcf565b604051602001610aea92919061237c565b6040516020818303038152906040528051906020012090505b6000610b1883610b1284611468565b90611498565b9050610b3d81878681518110610b3057610b30611f5d565b602002602001015161046a565b610b5a57604051632022058360e01b81526004016105b8906123b5565b83600003610b90576001600160a01b0381163314610b8b57604051632022058360e01b81526004016105b890612406565b610bfa565b60005b84811015610bf857816001600160a01b0316868281518110610bb757610bb7611f5d565b60200260200101516001600160a01b031603610be657604051632022058360e01b81526004016105b89061244a565b80610bf081612067565b915050610b93565b505b80858581518110610c0d57610c0d611f5d565b60200260200101906001600160a01b031690816001600160a01b0316815250505050508080610c3b90612067565b9150506109c6565b50949350505050565b333014610c5857600080fd5b6002805460ff191660011790556040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a1565b600081815260056020908152604091829020805483518184028101840190945280845260609392830182828015610d1357602002820191906000526020600020906000905b82829054906101000a900460c01b6001600160c01b03191681526020019060080190602082600701049283019260010382029150808411610cd55790505b50505050509050919050565b333014610d2b57600080fd5b6000826001600160a01b031682604051610d449061245a565b60006040518083038185875af1925050503d8060008114610d81576040519150601f19603f3d011682016040523d82523d6000602084013e610d86565b606091505b505090508061040d57600080fd5b6060610d9e6114bc565b60025460ff1615610dfe57610db66060830183611fcf565b610dc5916004916000916121ba565b610dce916121ea565b6001600160e01b031916638456cb5960e01b03610dfe57604051632022058360e01b81526004016105b89061248d565b610e0982600161077a565b50600080610e1d6060850160408601611c7a565b6001600160a01b031634610e346060870187611fcf565b604051610e42929190612044565b60006040518083038185875af1925050503d8060008114610e7f576040519150601f19603f3d011682016040523d82523d6000602084013e610e84565b606091505b509150915081610eb8578051600003610eb0576040516330f4936760e21b81526004016105b8906124d1565b805181602001fd5b600160076000610ecb6080880188611f73565b6000818110610edc57610edc611f5d565b9050602002810190610eee9190611fcf565b604051610efc929190612044565b60408051918290039091208252602082019290925201600020805460ff1916911515919091179055600180559150610f319050565b919050565b600054610100900460ff1615808015610f565750600054600160ff909116105b80610f705750303b158015610f70575060005460ff166001145b610f8c5760405162461bcd60e51b81526004016105b89061252c565b6000805460ff191660011790558015610faf576000805461ff0019166101001790555b6040861115610fd1576040516330f4936760e21b81526004016105b8906120dd565b610fdd600388886116b1565b507fdc3627b8a50594a2c055615b1dd1ef69f5dc80de35b405d1550f8bc7276e71ee878760405161100f929190612129565b60405180910390a16110728585808060200260200160405190810160405280939291908181526020016000905b82821015611068576110596040830286013681900381019061253c565b8152602001906001019061103c565b50505050506113a5565b6110be6b61646d696e2d706f6c69637960a01b8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506111f992505050565b6110df30635e7c67db60e01b6b61646d696e2d706f6c69637960a01b611335565b611100306367eae18b60e01b6b61646d696e2d706f6c69637960a01b611335565b6111213063101970f760e01b6b61646d696e2d706f6c69637960a01b611335565b6111423063167e793960e11b6b61646d696e2d706f6c69637960a01b611335565b61116330638456cb5960e01b6b61646d696e2d706f6c69637960a01b611335565b61118430631fa5d41d60e11b6b61646d696e2d706f6c69637960a01b611335565b6111a53063a9059cbb60e01b6b61646d696e2d706f6c69637960a01b611335565b80156111f0576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906111e790600190612571565b60405180910390a15b50505050505050565b81611217576040516330f4936760e21b81526004016105b8906125a5565b60008281526005602052604090205415611244576040516330f4936760e21b81526004016105b8906125e0565b8051600003611266576040516330f4936760e21b81526004016105b89061261d565b60006112706114e5565b905060005b82518110156112d7578183828151811061129157611291611f5d565b6020026020010151168382815181106112ac576112ac611f5d565b6001600160c01b031990921660209283029190910190910152806112cf81612067565b915050611275565b50600083815260056020908152604090912083516112f7928501906116fc565b50827f1c28460e7353d1f76d93ce571bb7bf39c569b19a4c9b2a4c1d7f2c9c95f4c0da836040516113289190611c62565b60405180910390a2505050565b6001600160a01b03831660008181526006602090815260408083206001600160e01b03198716845290915290819020839055518291907fba1ec2dff55a4b0931cf9207c31d493bd27e678b2e15d806c497b820c4dcaeeb9061139890869061263d565b60405180910390a3505050565b60006113af6114e5565b905060005b82518110156114385760008382815181106113d1576113d1611f5d565b602090810291909101810151808201805186166001600160c01b0319811690915290516001600160a01b0316600090815260049092526040909120805467ffffffffffffffff191660c09290921c919091179055508061143081612067565b9150506113b4565b507f12a11ba4a0395b9f775a0cdac6c1a44182322f4a2892f95922fdc1479cfc02c88260405161064691906126c7565b60008160405160200161147b91906126d8565b604051602081830303815290604052805190602001209050919050565b60008060006114a78585611506565b915091506114b48161154b565b509392505050565b6002600154036114de5760405162461bcd60e51b81526004016105b890612747565b6002600155565b6003546000906114f6906040612369565b6001600160c01b0319901c919050565b600080825160410361153c5760208301516040840151606085015160001a611530878285856115fa565b94509450505050611544565b506000905060025b9250929050565b600081600481111561155f5761155f612757565b036115675750565b600181600481111561157b5761157b612757565b036115985760405162461bcd60e51b81526004016105b8906127a1565b60028160048111156115ac576115ac612757565b036115c95760405162461bcd60e51b81526004016105b8906127e5565b60038160048111156115dd576115dd612757565b036106675760405162461bcd60e51b81526004016105b890612834565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561163157506000905060036116a8565b600060018787878760405160008152602001604052604051611656949392919061284d565b6020604051602081039080840390855afa158015611678573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116a1576000600192509250506116a8565b9150600090505b94509492505050565b8280548282559060005260206000209081019282156116ec579160200282015b828111156116ec5782358255916020019190600101906116d1565b506116f89291506117a5565b5090565b828054828255906000526020600020906003016004900481019282156116ec5791602002820160005b8382111561176957835183826101000a8154816001600160401b03021916908360c01c02179055509260200192600801602081600701049283019260010302611725565b801561179c5782816101000a8154906001600160401b030219169055600801602081600701049283019260010302611769565b50506116f89291505b5b808211156116f857600081556001016117a6565b805b811461066757600080fd5b80356104a1816117ba565b60008083601f8401126117e7576117e7600080fd5b5081356001600160401b0381111561180157611801600080fd5b60208301915083602082028301111561154457611544600080fd5b60008060006040848603121561183457611834600080fd5b600061184086866117c7565b93505060208401356001600160401b0381111561185f5761185f600080fd5b61186b868287016117d2565b92509250509250925092565b60006020828403121561188c5761188c600080fd5b600061189884846117c7565b949350505050565b8015155b82525050565b602081016104a182846118a0565b60006001600160a01b0382166104a1565b6117bc816118b8565b80356104a1816118c9565b6001600160e01b031981166117bc565b80356104a1816118dd565b60008060006060848603121561191057611910600080fd5b600061191c86866118d2565b935050602061192d868287016118ed565b925050604061193e868287016117c7565b9150509250925092565b6001600160c01b031981166117bc565b80356104a181611948565b6000806040838503121561197957611979600080fd5b600061198585856118d2565b925050602061199685828601611958565b9150509250929050565b600060a082840312156119b5576119b5600080fd5b50919050565b6000602082840312156119d0576119d0600080fd5b81356001600160401b038111156119e9576119e9600080fd5b611898848285016119a0565b60008060208385031215611a0b57611a0b600080fd5b82356001600160401b03811115611a2457611a24600080fd5b611a30858286016117d2565b92509250509250929050565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715611a7757611a77611a3c565b6040525050565b6000611a8960405190565b9050610f318282611a52565b60006001600160401b03821115611aae57611aae611a3c565b5060209081020190565b600060408284031215611acd57611acd600080fd5b611ad76040611a7e565b90506000611ae584846118d2565b8252506020611af684848301611958565b60208301525092915050565b6000611b15611b1084611a95565b611a7e565b83815290506020810160408402830185811115611b3457611b34600080fd5b835b81811015611b5a5780611b498882611ab8565b845250602090920191604001611b36565b5050509392505050565b600082601f830112611b7857611b78600080fd5b8135611898848260208601611b02565b600060208284031215611b9d57611b9d600080fd5b81356001600160401b03811115611bb657611bb6600080fd5b61189884828501611b64565b60008060408385031215611bd857611bd8600080fd5b6000611be485856118d2565b9250506020611996858286016118ed565b6001600160c01b031981166118a4565b6000611c118383611bf5565b505060200190565b6000611c23825190565b80845260209384019383018060005b83811015611c57578151611c468882611c05565b975060208301925050600101611c32565b509495945050505050565b60208082528101611c738184611c19565b9392505050565b600060208284031215611c8f57611c8f600080fd5b600061189884846118d2565b602081016104a18284611bf5565b806118a4565b6000611c118383611ca9565b6000611cc5825190565b80845260209384019383018060005b83811015611c57578151611ce88882611caf565b975060208301925050600101611cd4565b60208082528101611c738184611cbb565b8015156117bc565b80356104a181611d0a565b60008060408385031215611d3357611d33600080fd5b82356001600160401b03811115611d4c57611d4c600080fd5b611d58858286016119a0565b925050602061199685828601611d12565b6118a4816118b8565b6000611c118383611d69565b6000611d88825190565b80845260209384019383018060005b83811015611c57578151611dab8882611d72565b975060208301925050600101611d97565b60208082528101611c738184611d7e565b60008060408385031215611de357611de3600080fd5b6000611def85856118d2565b9250506020611996858286016117c7565b60005b83811015611e1b578181015183820152602001611e03565b50506000910152565b6000611e2e825190565b808452602084019350611e45818560208601611e00565b601f19601f8201165b9093019392505050565b60208082528101611c738184611e24565b60008083601f840112611e7e57611e7e600080fd5b5081356001600160401b03811115611e9857611e98600080fd5b60208301915083604082028301111561154457611544600080fd5b60008060008060008060608789031215611ecf57611ecf600080fd5b86356001600160401b03811115611ee857611ee8600080fd5b611ef489828a016117d2565b965096505060208701356001600160401b03811115611f1557611f15600080fd5b611f2189828a01611e69565b945094505060408701356001600160401b03811115611f4257611f42600080fd5b611f4e89828a016117d2565b92509250509295509295509295565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1936859003018112611f8e57611f8e600080fd5b8084019250823591506001600160401b03821115611fae57611fae600080fd5b60209283019282023603831315611fc757611fc7600080fd5b509250929050565b6000808335601e1936859003018112611fea57611fea600080fd5b8084019250823591506001600160401b0382111561200a5761200a600080fd5b602083019250600182023603831315611fc757611fc7600080fd5b82818337506000910152565b600061203e838584612025565b50500190565b6000611898828486612031565b634e487b7160e01b600052601160045260246000fd5b6000600019820361207a5761207a612051565b5060010190565b808201808211156104a1576104a1612051565b602981526000602082017f54686520536869656c642063616e6e6f742068617665206d6f7265207468616e81526820363420726f6c657360b81b602082015291505b5060400190565b602080825281016104a181612094565b82818337505050565b81835260006020840193506001600160fb1b0383111561211857612118600080fd5b60208302925061203e8385846120ed565b602080825281016118988184866120f6565b6011815260006020820170086d0c2d2dc40928840dad2e6dac2e8c6d607b1b815291505b5060200190565b602080825281016104a18161213b565b601981526000602082017f417070726f76616c732063616e6e6f7420626520656d707479000000000000008152915061215f565b602080825281016104a181612176565b600080858511156121cd576121cd600080fd5b838611156121dd576121dd600080fd5b5050820193919092039150565b80356001600160e01b0319168282600482101561221d576122186001600160e01b0319836004036008021b90565b831692505b505092915050565b601e81526000602082017f43726564656e7469616c732068617665206265656e2063616e63656c656400008152915061215f565b602080825281016104a181612225565b602681526000602082017f43726564656e7469616c732068617665206265656e20657865637574656420618152656c726561647960d01b602082015291506120d6565b602080825281016104a181612269565b601d81526000602082017f496e636f7272656374206e756d626572206f6620617070726f76616c730000008152915061215f565b602080825281016104a1816122bc565b8183526000602084019350612316838584612025565b601f19601f840116611e4e565b608081016123318288611ca9565b61233e6020830187611ca9565b61234b6040830186611d69565b818103606083015261235e818486612300565b979650505050505050565b818103818111156104a1576104a1612051565b60208082528101611898818486612300565b601081526000602082016f2837b634b1bc903b34b7b630ba34b7b760811b8152915061215f565b602080825281016104a18161238e565b602481526000602082017f546865206f776e6572206d75737420626520746865206669727374206170707281526337bb32b960e11b602082015291506120d6565b602080825281016104a1816123c5565b601e81526000602082017f53616d6520616464726573732063616e6e6f74207369676e20747769636500008152915061215f565b602080825281016104a181612416565b6000816104a1565b6014815260006020820173151a194814da1a595b19081a5cc81c185d5cd95960621b8152915061215f565b602080825281016104a181612462565b601b81526000602082017f63726564656e7469616c7320657865637574696f6e206572726f7200000000008152915061215f565b602080825281016104a18161249d565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291506120d6565b602080825281016104a1816124e1565b60006040828403121561255157612551600080fd5b60006118988484611ab8565b600060ff82166104a1565b6118a48161255d565b602081016104a18284612568565b600f81526000602082016e155b9919599a5b9959081b1858995b608a1b8152915061215f565b602080825281016104a18161257f565b60148152600060208201734c6162656c20616c72656164792065786973747360601b8152915061215f565b602080825281016104a1816125b5565b6016815260006020820175506f6c6963792063616e6e6f7420626520656d70747960501b8152915061215f565b602080825281016104a1816125f0565b6001600160e01b031981166118a4565b602081016104a1828461262d565b8051604083019061265c8482611d69565b50602082015161266f6020850182611bf5565b50505050565b6000612681838361264b565b505060400190565b6000612693825190565b80845260209384019383018060005b83811015611c575781516126b68882612675565b9750602083019250506001016126a2565b60208082528101611c738184612689565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c01600061270a8284611ca9565b50602001919050565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c008152915061215f565b602080825281016104a181612713565b634e487b7160e01b600052602160045260246000fd5b601881526000602082017f45434453413a20696e76616c6964207369676e617475726500000000000000008152915061215f565b602080825281016104a18161276d565b601f81526000602082017f45434453413a20696e76616c6964207369676e6174757265206c656e677468008152915061215f565b602080825281016104a1816127b1565b602281526000602082017f45434453413a20696e76616c6964207369676e6174757265202773272076616c815261756560f01b602082015291506120d6565b602080825281016104a1816127f5565b60ff81166118a4565b6080810161285b8287611ca9565b6128686020830186612844565b6128756040830185611ca9565b6128826060830184611ca9565b9594505050505056fea264697066735822122062a2a0fdef353fe125350a7b0227a774b095f0688d36b7dbe6f52b3a4c8212aa64736f6c63430008110033";

type ShieldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShieldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shield__factory extends ContractFactory {
  constructor(...args: ShieldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Shield> {
    return super.deploy(overrides || {}) as Promise<Shield>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Shield {
    return super.attach(address) as Shield;
  }
  override connect(signer: Signer): Shield__factory {
    return super.connect(signer) as Shield__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShieldInterface {
    return new utils.Interface(_abi) as ShieldInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Shield {
    return new Contract(address, _abi, signerOrProvider) as Shield;
  }
}
