/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC20Holder,
  ERC20HolderInterface,
} from "../../contracts/ERC20Holder";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Shield",
        name: "shield",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "sendERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106a93803806106a983398101604081905261002f91610098565b600080546001600160a01b0319166001600160a01b0392909216919091179055600180556100c1565b60006001600160a01b0382165b92915050565b600061006582610058565b61007f8161006b565b811461008a57600080fd5b50565b805161006581610076565b6000602082840312156100ad576100ad600080fd5b60006100b9848461008d565b949350505050565b6105d9806100d06000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638f975a6414610030575b600080fd5b61004361003e366004610322565b610045565b005b61004d610086565b6000546001600160a01b0316331461006457600080fd5b6100786001600160a01b03841683836100b8565b61008160018055565b505050565b6002600154036100b15760405162461bcd60e51b81526004016100a8906103a9565b60405180910390fd5b6002600155565b6100818363a9059cbb60e01b84846040516024016100d79291906103ce565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152600061015e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166101989092919063ffffffff16565b805190915015610081578080602001905181019061017c91906103fc565b6100815760405162461bcd60e51b81526004016100a890610467565b60606101a784846000856101b1565b90505b9392505050565b6060824710156101d35760405162461bcd60e51b81526004016100a8906104ba565b600080866001600160a01b031685876040516101ef9190610510565b60006040518083038185875af1925050503d806000811461022c576040519150601f19603f3d011682016040523d82523d6000602084013e610231565b606091505b50915091506102428783838761024f565b925050505b949350505050565b6060831561028e578251600003610287576001600160a01b0385163b6102875760405162461bcd60e51b81526004016100a890610550565b5081610247565b61024783838151156102a35781518083602001fd5b8060405162461bcd60e51b81526004016100a89190610592565b60006001600160a01b0382165b92915050565b60006102ca826102bd565b6102e4816102d0565b81146102ef57600080fd5b50565b80356102ca816102db565b6102e4816102bd565b80356102ca816102fd565b806102e4565b80356102ca81610311565b60008060006060848603121561033a5761033a600080fd5b600061034686866102f2565b935050602061035786828701610306565b925050604061036886828701610317565b9150509250925092565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815291505b5060200190565b602080825281016102ca81610372565b6103c2816102bd565b82525050565b806103c2565b604081016103dc82856103b9565b6101aa60208301846103c8565b8015156102e4565b80516102ca816103e9565b60006020828403121561041157610411600080fd5b600061024784846103f1565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015291505b5060400190565b602080825281016102ca8161041d565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b60208201529150610460565b602080825281016102ca81610477565b60005b838110156104e55781810151838201526020016104cd565b50506000910152565b60006104f8825190565b6105068185602086016104ca565b9290920192915050565b60006101aa82846104ee565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000815291506103a2565b602080825281016102ca8161051c565b600061056a825190565b8084526020840193506105818185602086016104ca565b601f01601f19169290920192915050565b602080825281016101aa818461056056fea2646970667358221220766cf0a03d25e7f6b94f5c71e3deb8b6e33658e0974bf39df701864bfe94204464736f6c63430008110033";

type ERC20HolderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20HolderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Holder__factory extends ContractFactory {
  constructor(...args: ERC20HolderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    shield: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Holder> {
    return super.deploy(shield, overrides || {}) as Promise<ERC20Holder>;
  }
  override getDeployTransaction(
    shield: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(shield, overrides || {});
  }
  override attach(address: string): ERC20Holder {
    return super.attach(address) as ERC20Holder;
  }
  override connect(signer: Signer): ERC20Holder__factory {
    return super.connect(signer) as ERC20Holder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20HolderInterface {
    return new utils.Interface(_abi) as ERC20HolderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Holder {
    return new Contract(address, _abi, signerOrProvider) as ERC20Holder;
  }
}
