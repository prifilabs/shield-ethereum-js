/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  WalletExampleWithShield,
  WalletExampleWithShieldInterface,
} from "../../contracts/WalletExampleWithShield";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Shield",
        name: "shield",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidCredentials",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "canceled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "executed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
          {
            internalType: "bytes[]",
            name: "approvals",
            type: "bytes[]",
          },
        ],
        internalType: "struct Credentials",
        name: "credentials",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052604051610b81380380610b81833981016040819052610022916100f2565b600080546001600160a01b0319166001600160a01b038316908117909155819030146100ab5760005460405163346010bb60e21b81526001600160a01b039091169063d18042ec9061007890309060040161012a565b600060405180830381600087803b15801561009257600080fd5b505af11580156100a6573d6000803e3d6000fd5b505050505b5050610138565b60006001600160a01b0382165b92915050565b60006100bf826100b2565b6100d9816100c5565b81146100e457600080fd5b50565b80516100bf816100d0565b60006020828403121561010757610107600080fd5b600061011384846100e7565b949350505050565b610124816100b2565b82525050565b602081016100bf828461011b565b610a3a806101476000396000f3fe6080604052600436106100385760003560e01c806301d6034b146100445780631c43926614610066578063a9fcfb33146100ac57600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f366004610398565b6100dc565b005b34801561007257600080fd5b506100966100813660046103f0565b60026020526000908152604090205460ff1681565b6040516100a39190610423565b60405180910390f35b3480156100b857600080fd5b506100966100c73660046103f0565b60016020526000908152604090205460ff1681565b60005460408051635c975abb60e01b8152905183926001600160a01b031691635c975abb9160048083019260209291908290030181865afa158015610125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101499190610444565b156101a0576000546001600160a01b03163014801561017a5750633a3f16cb60e21b6001600160e01b031960003516145b6101a057604051632022058360e01b815260040161019790610465565b60405180910390fd5b6000816040516020016101b391906106d8565b60408051601f19818403018152919052516101ce90366106ff565b6101d9906020610712565b600080549192506001600160a01b039091169063fd835426908490339030906001600160e01b0319813516906102129088903681610725565b60016040518863ffffffff1660e01b81526004016102369796959493929190610765565b600060405180830381865afa158015610253573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261027b91908101906108df565b506000336001600160a01b0316856040516102959061091a565b60006040518083038185875af1925050503d80600081146102d2576040519150601f19603f3d011682016040523d82523d6000602084013e6102d7565b606091505b50509050806102e557600080fd5b5060018060006102f86080860186610922565b600081811061030957610309610977565b905060200281019061031b919061098d565b6040516103299291906109f7565b6040518091039020815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b805b811461036957600080fd5b50565b80356103778161035c565b92915050565b600060a0828403121561039257610392600080fd5b50919050565b600080604083850312156103ae576103ae600080fd5b60006103ba858561036c565b925050602083013567ffffffffffffffff8111156103da576103da600080fd5b6103e68582860161037d565b9150509250929050565b60006020828403121561040557610405600080fd5b6000610411848461036c565b949350505050565b8015155b82525050565b602081016103778284610419565b80151561035e565b805161037781610431565b60006020828403121561045957610459600080fd5b60006104118484610439565b60208082528101610377816014815273151a194814da1a595b19081a5cc81c185d5cd95960621b602082015260400190565b60006104a6602084018461036c565b9392505050565b8061041d565b60006001600160a01b038216610377565b61035e816104b3565b8035610377816104c4565b60006104a660208401846104cd565b61041d816104b3565b6000808335601e193685900301811261050b5761050b600080fd5b83810160208101935035915067ffffffffffffffff82111561052f5761052f600080fd5b3682900383131561054257610542600080fd5b509250929050565b82818337506000910152565b818352600060208401935061056c83858461054a565b5050601f01601f19160190565b6000808335601e193685900301811261059457610594600080fd5b83810160208101935035915067ffffffffffffffff8211156105b8576105b8600080fd5b60208202360383131561054257610542600080fd5b6000610411848484610556565b818352600060208401935083602084028101838060005b8781101561062c57848403895261060882846104f0565b6106138682846105cd565b95506020840160209b909b019a935050506001016105f1565b5091979650505050505050565b600060a083016106498380610497565b61065385826104ad565b506106616020840184610497565b61066e60208601826104ad565b5061067c60408401846104d8565b61068960408601826104e7565b5061069760608401846104f0565b85830360608701526106aa838284610556565b925050506106bb6080840184610579565b85830360808701526106ce8382846105da565b9695505050505050565b602080825281016104a68184610639565b634e487b7160e01b600052601160045260246000fd5b81810381811115610377576103776106e9565b80820180821115610377576103776106e9565b6000808585111561073857610738600080fd5b8386111561074857610748600080fd5b5050820193919092039150565b6001600160e01b0319811661041d565b60c08082528101610776818a610639565b905061078560208301896104e7565b61079260408301886104e7565b61079f6060830187610755565b81810360808301526107b2818587610556565b90506107c160a0830184610419565b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610809576108096107cd565b6040525050565b600061081b60405190565b905061082782826107e3565b919050565b600067ffffffffffffffff821115610846576108466107cd565b5060209081020190565b8051610377816104c4565b600061086e6108698461082c565b610810565b8381529050602080820190840283018581111561088d5761088d600080fd5b835b818110156108b157806108a28882610850565b8452506020928301920161088f565b5050509392505050565b600082601f8301126108cf576108cf600080fd5b815161041184826020860161085b565b6000602082840312156108f4576108f4600080fd5b815167ffffffffffffffff81111561090e5761090e600080fd5b610411848285016108bb565b600081610377565b6000808335601e193685900301811261093d5761093d600080fd5b80840192508235915067ffffffffffffffff82111561095e5761095e600080fd5b6020928301928202360383131561054257610542600080fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e19368590030181126109a8576109a8600080fd5b80840192508235915067ffffffffffffffff8211156109c9576109c9600080fd5b60208301925060018202360383131561054257610542600080fd5b60006109f183858461054a565b50500190565b60006104118284866109e456fea26469706673582212201c5bbc8726970e71c48fa391f1ed43329b3f6a6ee40fd83c60c42b193417622864736f6c63430008110033";

type WalletExampleWithShieldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletExampleWithShieldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WalletExampleWithShield__factory extends ContractFactory {
  constructor(...args: WalletExampleWithShieldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    shield: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<WalletExampleWithShield> {
    return super.deploy(
      shield,
      overrides || {}
    ) as Promise<WalletExampleWithShield>;
  }
  override getDeployTransaction(
    shield: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(shield, overrides || {});
  }
  override attach(address: string): WalletExampleWithShield {
    return super.attach(address) as WalletExampleWithShield;
  }
  override connect(signer: Signer): WalletExampleWithShield__factory {
    return super.connect(signer) as WalletExampleWithShield__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletExampleWithShieldInterface {
    return new utils.Interface(_abi) as WalletExampleWithShieldInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WalletExampleWithShield {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WalletExampleWithShield;
  }
}
