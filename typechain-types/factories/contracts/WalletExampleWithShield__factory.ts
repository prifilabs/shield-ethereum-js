/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  WalletExampleWithShield,
  WalletExampleWithShieldInterface,
} from "../../contracts/WalletExampleWithShield";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Shield",
        name: "shield",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidCredentials",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "shieldable",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "shield",
        type: "address",
      },
    ],
    name: "ShieldableDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "call",
            type: "bytes",
          },
          {
            internalType: "bytes[]",
            name: "approvals",
            type: "bytes[]",
          },
        ],
        internalType: "struct Credentials",
        name: "credentials",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052604051610a9e380380610a9e833981016040819052610022916100c1565b600080546001600160a01b0319166001600160a01b03831690811790915560405182917f7325cede0f4927e0139385df8b1c5e5fbb3e2de5851b8c784ea8e75e2576d1b7916100729130916100f9565b60405180910390a1505061011b565b60006001600160a01b0382165b92915050565b600061008e82610081565b6100a881610094565b81146100b357600080fd5b50565b805161008e8161009f565b6000602082840312156100d6576100d6600080fd5b60006100e284846100b6565b949350505050565b6100f381610081565b82525050565b6040810161010782856100ea565b61011460208301846100ea565b9392505050565b6109748061012a6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806301d6034b14610030575b600080fd5b61004361003e366004610301565b610045565b005b60005460408051635c975abb60e01b8152905183926001600160a01b031691635c975abb9160048083019260209291908290030181865afa15801561008e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b2919061036c565b15610109576000546001600160a01b0316301480156100e35750633a3f16cb60e21b6001600160e01b031960003516145b61010957604051632022058360e01b815260040161010090610395565b60405180910390fd5b60008160405160200161011c919061060a565b60408051601f19818403018152919052516101379036610631565b610142906020610644565b600080549192506001600160a01b039091169063fd835426908490339030906001600160e01b03198135169061017b9088903681610657565b60016040518863ffffffff1660e01b815260040161019f979695949392919061069f565b600060405180830381865afa1580156101bc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101e49190810190610819565b506000336001600160a01b0316856040516101fe90610854565b60006040518083038185875af1925050503d806000811461023b576040519150601f19603f3d011682016040523d82523d6000602084013e610240565b606091505b505090508061024e57600080fd5b506001806000610261608086018661085c565b6000818110610272576102726108b1565b905060200281019061028491906108c7565b604051610292929190610931565b6040518091039020815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b805b81146102d257600080fd5b50565b80356102e0816102c5565b92915050565b600060a082840312156102fb576102fb600080fd5b50919050565b6000806040838503121561031757610317600080fd5b600061032385856102d5565b925050602083013567ffffffffffffffff81111561034357610343600080fd5b61034f858286016102e6565b9150509250929050565b8015156102c7565b80516102e081610359565b60006020828403121561038157610381600080fd5b600061038d8484610361565b949350505050565b602080825281016102e0816014815273151a194814da1a595b19081a5cc81c185d5cd95960621b602082015260400190565b60006103d660208401846102d5565b9392505050565b805b82525050565b60006001600160a01b0382166102e0565b6102c7816103e5565b80356102e0816103f6565b60006103d660208401846103ff565b6103df816103e5565b6000808335601e193685900301811261043d5761043d600080fd5b83810160208101935035915067ffffffffffffffff82111561046157610461600080fd5b3682900383131561047457610474600080fd5b509250929050565b82818337506000910152565b818352600060208401935061049e83858461047c565b5050601f01601f19160190565b6000808335601e19368590030181126104c6576104c6600080fd5b83810160208101935035915067ffffffffffffffff8211156104ea576104ea600080fd5b60208202360383131561047457610474600080fd5b600061038d848484610488565b818352600060208401935083602084028101838060005b8781101561055e57848403895261053a8284610422565b6105458682846104ff565b95506020840160209b909b019a93505050600101610523565b5091979650505050505050565b600060a0830161057b83806103c7565b61058585826103dd565b5061059360208401846103c7565b6105a060208601826103dd565b506105ae604084018461040a565b6105bb6040860182610419565b506105c96060840184610422565b85830360608701526105dc838284610488565b925050506105ed60808401846104ab565b858303608087015261060083828461050c565b9695505050505050565b602080825281016103d6818461056b565b634e487b7160e01b600052601160045260246000fd5b818103818111156102e0576102e061061b565b808201808211156102e0576102e061061b565b6000808585111561066a5761066a600080fd5b8386111561067a5761067a600080fd5b5050820193919092039150565b6001600160e01b031981166103df565b8015156103df565b60c080825281016106b0818a61056b565b90506106bf6020830189610419565b6106cc6040830188610419565b6106d96060830187610687565b81810360808301526106ec818587610488565b90506106fb60a0830184610697565b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561074357610743610707565b6040525050565b600061075560405190565b9050610761828261071d565b919050565b600067ffffffffffffffff82111561078057610780610707565b5060209081020190565b80516102e0816103f6565b60006107a86107a384610766565b61074a565b838152905060208082019084028301858111156107c7576107c7600080fd5b835b818110156107eb57806107dc888261078a565b845250602092830192016107c9565b5050509392505050565b600082601f83011261080957610809600080fd5b815161038d848260208601610795565b60006020828403121561082e5761082e600080fd5b815167ffffffffffffffff81111561084857610848600080fd5b61038d848285016107f5565b6000816102e0565b6000808335601e193685900301811261087757610877600080fd5b80840192508235915067ffffffffffffffff82111561089857610898600080fd5b6020928301928202360383131561047457610474600080fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e19368590030181126108e2576108e2600080fd5b80840192508235915067ffffffffffffffff82111561090357610903600080fd5b60208301925060018202360383131561047457610474600080fd5b600061092b83858461047c565b50500190565b600061038d82848661091e56fea264697066735822122080cb4c96d3595c9b95ed0421a885cc87eea9320802c8ebdda42366e211c8950264736f6c63430008110033";

type WalletExampleWithShieldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletExampleWithShieldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WalletExampleWithShield__factory extends ContractFactory {
  constructor(...args: WalletExampleWithShieldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    shield: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<WalletExampleWithShield> {
    return super.deploy(
      shield,
      overrides || {}
    ) as Promise<WalletExampleWithShield>;
  }
  override getDeployTransaction(
    shield: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(shield, overrides || {});
  }
  override attach(address: string): WalletExampleWithShield {
    return super.attach(address) as WalletExampleWithShield;
  }
  override connect(signer: Signer): WalletExampleWithShield__factory {
    return super.connect(signer) as WalletExampleWithShield__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletExampleWithShieldInterface {
    return new utils.Interface(_abi) as WalletExampleWithShieldInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WalletExampleWithShield {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WalletExampleWithShield;
  }
}
